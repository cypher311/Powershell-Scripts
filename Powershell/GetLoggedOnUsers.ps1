#Generated Form Function 
function GenerateForm { 
######################################################################## 
# Code Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.9.0 
# Generated On: 26/03/2011 1:19 PM 
# Generated By: Wayne 
######################################################################## 
 
#region Import the Assemblies 
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null 
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null 
#endregion 
 
#region Generated Form Objects 
$form1 = New-Object System.Windows.Forms.Form 
$button_About = New-Object System.Windows.Forms.Button 
$checkBox_AlternateCredentials = New-Object System.Windows.Forms.CheckBox 
$button_GetUser = New-Object System.Windows.Forms.Button 
$textBox_ComputerName = New-Object System.Windows.Forms.TextBox 
$label_ComputerName = New-Object System.Windows.Forms.Label 
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState 
#endregion Generated Form Objects 
 
#---------------------------------------------- 
#Generated Event Script Blocks 
#---------------------------------------------- 
#Provide Custom Code for events specified in PrimalForms. 
$handler_button_About_Click=  
{ 
#TODO: Place custom script here 
    [System.Windows.Forms.MessageBox]::Show("Script developed by Wayne Hoggett (www.waynehoggett.com)") 
} 
 
$handler_button1_Click=  
{ 
    function Get-User ($ComputerName,$Credentials) { 
        if ($Credentials) { 
            $Username = (Get-WMiObject -Class Win32_ComputerSystem -ComputerName $ComputerName -Credential $Credentials).Username 
        } else { 
            $Username = (Get-WMiObject -Class Win32_ComputerSystem -ComputerName $ComputerName).Username 
        } 
        if ($Username) { 
            [System.Windows.Forms.MessageBox]::Show($Username,"User on $ComputerName") 
        } else { 
            [System.Windows.Forms.MessageBox]::Show("Error retrieving user on $ComputerName","Error") 
        } 
    } 
    if (($checkBox_AlternateCredentials.Checked) -eq $TRUE) { 
        $PSCredential = $host.ui.PromptForCredential("Alternate Credentials","Username and Password","","") 
        Get-User -ComputerName ($textBox_ComputerName.Text) -Credentials $PSCredential 
    } else { 
        Get-User -ComputerName ($textBox_ComputerName.Text) 
    } 
 
} 
 
$OnLoadForm_StateCorrection= 
{#Correct the initial state of the form to prevent the .Net maximized form issue 
    $form1.WindowState = $InitialFormWindowState 
} 
 
#---------------------------------------------- 
#region Generated Form Code 
$System_Drawing_Size = New-Object System.Drawing.Size 
$System_Drawing_Size.Height = 102 
$System_Drawing_Size.Width = 295 
$form1.ClientSize = $System_Drawing_Size 
$form1.DataBindings.DefaultDataSourceUpdateMode = 0 
$form1.FormBorderStyle = 1 
$form1.MaximizeBox = $False 
$form1.MinimizeBox = $False 
$form1.Name = "form1" 
$form1.ShowIcon = $False 
$form1.Text = "Get User" 
 
 
$button_About.DataBindings.DefaultDataSourceUpdateMode = 0 
 
$System_Drawing_Point = New-Object System.Drawing.Point 
$System_Drawing_Point.X = 254 
$System_Drawing_Point.Y = 70 
$button_About.Location = $System_Drawing_Point 
$button_About.Name = "button_About" 
$System_Drawing_Size = New-Object System.Drawing.Size 
$System_Drawing_Size.Height = 23 
$System_Drawing_Size.Width = 29 
$button_About.Size = $System_Drawing_Size 
$button_About.TabIndex = 4 
$button_About.Text = "?" 
$button_About.UseVisualStyleBackColor = $True 
$button_About.add_Click($handler_button_About_Click) 
 
$form1.Controls.Add($button_About) 
 
 
$checkBox_AlternateCredentials.DataBindings.DefaultDataSourceUpdateMode = 0 
 
$System_Drawing_Point = New-Object System.Drawing.Point 
$System_Drawing_Point.X = 120 
$System_Drawing_Point.Y = 40 
$checkBox_AlternateCredentials.Location = $System_Drawing_Point 
$checkBox_AlternateCredentials.Name = "checkBox_AlternateCredentials" 
$System_Drawing_Size = New-Object System.Drawing.Size 
$System_Drawing_Size.Height = 24 
$System_Drawing_Size.Width = 163 
$checkBox_AlternateCredentials.Size = $System_Drawing_Size 
$checkBox_AlternateCredentials.TabIndex = 2 
$checkBox_AlternateCredentials.Text = "Use Alternate Credentials" 
$checkBox_AlternateCredentials.UseVisualStyleBackColor = $True 
 
$form1.Controls.Add($checkBox_AlternateCredentials) 
 
 
$button_GetUser.DataBindings.DefaultDataSourceUpdateMode = 0 
 
$System_Drawing_Point = New-Object System.Drawing.Point 
$System_Drawing_Point.X = 107 
$System_Drawing_Point.Y = 70 
$button_GetUser.Location = $System_Drawing_Point 
$button_GetUser.Name = "button_GetUser" 
$System_Drawing_Size = New-Object System.Drawing.Size 
$System_Drawing_Size.Height = 23 
$System_Drawing_Size.Width = 75 
$button_GetUser.Size = $System_Drawing_Size 
$button_GetUser.TabIndex = 3 
$button_GetUser.Text = "Get User" 
$button_GetUser.UseVisualStyleBackColor = $True 
$button_GetUser.add_Click($handler_button1_Click) 
 
$form1.Controls.Add($button_GetUser) 
 
$textBox_ComputerName.DataBindings.DefaultDataSourceUpdateMode = 0 
$System_Drawing_Point = New-Object System.Drawing.Point 
$System_Drawing_Point.X = 120 
$System_Drawing_Point.Y = 13 
$textBox_ComputerName.Location = $System_Drawing_Point 
$textBox_ComputerName.Name = "textBox_ComputerName" 
$System_Drawing_Size = New-Object System.Drawing.Size 
$System_Drawing_Size.Height = 20 
$System_Drawing_Size.Width = 163 
$textBox_ComputerName.Size = $System_Drawing_Size 
$textBox_ComputerName.TabIndex = 1 
 
$form1.Controls.Add($textBox_ComputerName) 
 
$label_ComputerName.DataBindings.DefaultDataSourceUpdateMode = 0 
 
$System_Drawing_Point = New-Object System.Drawing.Point 
$System_Drawing_Point.X = 13 
$System_Drawing_Point.Y = 13 
$label_ComputerName.Location = $System_Drawing_Point 
$label_ComputerName.Name = "label_ComputerName" 
$System_Drawing_Size = New-Object System.Drawing.Size 
$System_Drawing_Size.Height = 23 
$System_Drawing_Size.Width = 100 
$label_ComputerName.Size = $System_Drawing_Size 
$label_ComputerName.TabIndex = 0 
$label_ComputerName.Text = "Computer Name" 
$label_ComputerName.TextAlign = 64 
 
$form1.Controls.Add($label_ComputerName) 
 
#endregion Generated Form Code 
 
#Save the initial state of the form 
$InitialFormWindowState = $form1.WindowState 
#Init the OnLoad event to correct the initial state of the form 
$form1.add_Load($OnLoadForm_StateCorrection) 
#Show the Form 
$form1.ShowDialog()| Out-Null 
 
} #End Function 
 
#Call the Function 
GenerateForm 